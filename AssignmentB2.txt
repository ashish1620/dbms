			CREATE COLLECTION
db.createCollection("customer10");


			SHOW COLLECTION

show collections;
customer10
product
system.indexes

			DROP COLLECTION

> db.customer10.drop()
true



			INSERT DOCUMENT

db.product.insert({name: "Cake", price: 50, quantity: 3});

			READ DOCUMENT

> db.product.find().pretty()
{
	"_id" : ObjectId("5b98c8734f88ac2e22720410"),
	"name" : "Biscuits",
	"price" : 30,
	"quantity" : 5
}
{
	"_id" : ObjectId("5b98ca8f4f88ac2e22720417"),
	"name" : "Cake",
	"price" : 50,
	"quantity" : 3
}
{
	"_id" : ObjectId("5b98caa74f88ac2e22720418"),
	"name" : "Apple",
	"price" : 100,
	"quantity" : 6
}
{
	"_id" : ObjectId("5b98cac64f88ac2e22720419"),
	"name" : "Donuts",
	"price" : 70,
	"quantity" : 15
}


			UPDATE DOCUMENT

db.product.update({name: "Apple"},{$set:{name: "Mango"}})

			DELETE DOCUMENT

 db.product.remove({price: 100})

			OR OPERATION

 db.product.find({$or: [{name: "Apple"}, {name: "Cake"}]}).pretty()
{
	"_id" : ObjectId("5b98ca8f4f88ac2e22720417"),
	"name" : "Cake",
	"price" : 50,
	"quantity" : 3
}
{
	"_id" : ObjectId("5b98caa74f88ac2e22720418"),
	"name" : "Apple",
	"price" : 100,
	"quantity" : 6
}


> db.product.find({$or: [{name: "Apple"}, {name: "ghhfg"}]}).pretty()
{
	"_id" : ObjectId("5b98caa74f88ac2e22720418"),
	"name" : "Apple",
	"price" : 100,
	"quantity" : 6
}


			AND OPERATION

> db.product.find({$and: [{name: "Apple"}, {price: 100}]}).pretty()
{
	"_id" : ObjectId("5b98caa74f88ac2e22720418"),
	"name" : "Apple",
	"price" : 100,
	"quantity" : 6
}


			NOT OPERATION

db.product.find({price: {$not: {$gt: 70}}}).pretty()
{
	"_id" : ObjectId("5b98c8734f88ac2e22720410"),
	"name" : "Biscuits",
	"price" : 30,
	"quantity" : 5
}
{
	"_id" : ObjectId("5b98ca8f4f88ac2e22720417"),
	"name" : "Cake",
	"price" : 50,
	"quantity" : 3
}
{
	"_id" : ObjectId("5b98cac64f88ac2e22720419"),
	"name" : "Donuts",
	"price" : 70,
	"quantity" : 15
}

				SORT COLLECTION

> db.product.aggregate([{$sort: {price: -1}}]) .pretty()
{
	"_id" : ObjectId("5b98caa74f88ac2e22720418"),
	"name" : "Apple",
	"price" : 100,
	"quantity" : 6
}
{
	"_id" : ObjectId("5b98cac64f88ac2e22720419"),
	"name" : "Donuts",
	"price" : 70,
	"quantity" : 15
}
{
	"_id" : ObjectId("5b98ca8f4f88ac2e22720417"),
	"name" : "Cake",
	"price" : 50,
	"quantity" : 3
}
{
	"_id" : ObjectId("5b98c8734f88ac2e22720410"),
	"name" : "Biscuits",
	"price" : 30,
	"quantity" : 5
}
> db.product.aggregate([{$sort: {price: 1}}]) .pretty()
{
	"_id" : ObjectId("5b98c8734f88ac2e22720410"),
	"name" : "Biscuits",
	"price" : 30,
	"quantity" : 5
}
{
	"_id" : ObjectId("5b98ca8f4f88ac2e22720417"),
	"name" : "Cake",
	"price" : 50,
	"quantity" : 3
}
{
	"_id" : ObjectId("5b98cac64f88ac2e22720419"),
	"name" : "Donuts",
	"price" : 70,
	"quantity" : 15
}
{
	"_id" : ObjectId("5b98caa74f88ac2e22720418"),
	"name" : "Apple",
	"price" : 100,
	"quantity" : 6
}

				DISTINCT
db.runCommand({distinct:"order",key:"status"});
{
	"values" : [
		1,
		0
	],
	"stats" : {
		"n" : 3,
		"nscanned" : 0,
		"nscannedObjects" : 3,
		"timems" : 0,
		"planSummary" : "COLLSCAN"
	},
	"ok" : 1
}


