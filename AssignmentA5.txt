SQL> create table Customer1
(Cust_id number(4),
DateofPayment date,
NameofScheme varchar2(10),
Status varchar2(1),
primary key(Cust_id)
);


Table created.

SQL>  
SQL> create table Fine1
(Cust_id number(4),
Date1 date,
Amt number(8),
foreign key(Cust_id)
references Customer1(Cust_id)
);

Table created.

SQL> describe Customer1;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUST_ID				   NOT NULL NUMBER(4)
 DATEOFPAYMENT					    DATE
 NAMEOFSCHEME					    VARCHAR2(10)
 STATUS 					    VARCHAR2(1)

SQL> describe Fine1;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUST_ID					    NUMBER(4)
 DATE1						    DATE
 AMT						    NUMBER(8)

SQL> 
SQL> insert into Customer1 values(&Cust_id,'&DateofPayment','&NameofScheme','N');
Enter value for cust_id: 1
Enter value for dateofpayment: 08-aug-2018
Enter value for nameofscheme: s1
old   1: insert into Customer1 values(&Cust_id,'&DateofPayment','&NameofScheme','N')
new   1: insert into Customer1 values(1,'08-aug-2018','s1','N')

1 row created.

SQL> insert into Customer1 values(&Cust_id,'&DateofPayment','&NameofScheme','N');
Enter value for cust_id: 2
Enter value for dateofpayment: 8-aug-2018
Enter value for nameofscheme: s2
old   1: insert into Customer1 values(&Cust_id,'&DateofPayment','&NameofScheme','N')
new   1: insert into Customer1 values(2,'8-aug-2018','s2','N')

1 row created.

SQL> insert into Customer1 values(&Cust_id,'&DateofPayment','&NameofScheme','N');
Enter value for cust_id: 3
Enter value for dateofpayment: 8-aug-2018
Enter value for nameofscheme: s3
old   1: insert into Customer1 values(&Cust_id,'&DateofPayment','&NameofScheme','N')
new   1: insert into Customer1 values(3,'8-aug-2018','s3','N')

1 row created.

SQL> select * from Customer1;

   CUST_ID DATEOFPA NAMEOFSCHE S
---------- -------- ---------- -
	 1 08-08-18 s1	       N
	 2 08-08-18 s2	       N
	 3 08-08-18 s3	       N

SQL> 
SQL> set serveroutput on
SQL> update Customer1 set DateofPayment='8-july-2018' where DateofPayment='8-aug-2018';

3 rows updated.

SQL> select * from Customer1;

   CUST_ID DATEOFPA NAMEOFSCHE S
---------- -------- ---------- -
	 1 08-07-18 s1	       N
	 2 08-07-18 s2	       N
	 3 08-07-18 s3	       N

SQL> 

/* block declaration */

DECLARE 

cust_row Customer1%rowtype;
days number(2);
amount number(6);
paid_already EXCEPTION; 

BEGIN

SELECT * into cust_row FROM Customer1  where Cust_id = &CUST_ID;


if cust_row.Status = 'P' then 
	raise paid_already;
end if;
days := current_date - cust_row.DateofPayment;  
if days <0 then
	amount:=0;
elsif days <30 and days>15 then 
	amount:= days*5;
else
	amount := days*50;
end if;  	


UPDATE Customer1 set Status = 'P' where Cust_id = cust_row.Cust_id;
INSERT INTO Fine1 VALUES(cust_row.Cust_id , cust_row.DateofPayment , amount);



EXCEPTION 
WHEN paid_already THEN
dbms_output.put_line('Payment already done');
WHEN no_data_found THEN 
dbms_output.put_line('No such customer');	
WHEN others THEN
dbms_output.put_line('Error');



END; 	  

Enter value for cust_id: 1
old  10: SELECT * into cust_row FROM Customer1	where Cust_id = &CUST_ID;
new  10: SELECT * into cust_row FROM Customer1	where Cust_id = 1;

PL/SQL procedure successfully completed.

SQL> select * from Fine1;

   CUST_ID DATE1	   AMT
---------- -------- ----------
	 1 08-07-18	   125

SQL> 
Enter value for cust_id: 1
old  10: SELECT * into cust_row FROM Customer1	where Cust_id = &CUST_ID;
new  10: SELECT * into cust_row FROM Customer1	where Cust_id = 1;
Payment already done

PL/SQL procedure successfully completed.

SQL> 


